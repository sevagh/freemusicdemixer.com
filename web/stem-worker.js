let modelName,selectedStems,modelBuffers;function loadWASMModule(){try{return importScripts("demucs_onnx_simd.js"),libdemucs()}catch(e){return console.error("Error loading WASM module script:",e),null}}function getNumModelsFromModelName(){let e=1;return"demucs-pro-ft"===modelName||"demucs-pro-deluxe"===modelName?e=selectedStems.length:"demucs-pro-cust"===modelName?e=2:"demucs-pro-cust-spec"===modelName&&(e=4),e}function getNumTargetsFromModelName(){let t=[4];if("demucs-free-6s"===modelName)t=[6];else if("demucs-karaoke"===modelName)t=[2];else if("demucs-pro-ft"===modelName||"demucs-pro-deluxe"===modelName){t=[];for(let e=0;e<selectedStems.length;e++)"drums"===selectedStems[e]||"bass"===selectedStems[e]||"melody"===selectedStems[e]?t.push(4):"vocals"===selectedStems[e]&&t.push("demucs-pro-ft"===modelName?4:2)}return t}onmessage=async function(u){if("LOAD_WASM"===u.data.msg)modelName=u.data.model,selectedStems=u.data.stems.filter(e=>"instrumental"!==e),"demucs-free-6s"!==modelName&&"demucs-pro-cust"!==modelName||(selectedStems=selectedStems.filter(e=>"melody"!==e)),modelBuffers=u.data.modelBuffers;else if("PROCESS_AUDIO"===u.data.msg||"PROCESS_AUDIO_BATCH"===u.data.msg){console.log("Started demix job at "+(new Date).toString());var c=u.data.leftChannel,i=u.data.rightChannel,e=getNumModelsFromModelName();let n=e,s=!1;"demucs-pro-deluxe"!==modelName&&"demucs-pro-cust"!==modelName&&"demucs-karaoke"!==modelName&&"demucs-pro-cust-spec"!==modelName||(console.log("Using augmented inference for model:",modelName),s=!0,n*=2);var p=[],f=modelBuffers.map(e=>new Uint8Array(e));if("demucs-pro-cust"!=modelName&&"demucs-pro-cust-spec"!=modelName){var a=getNumTargetsFromModelName();for(let o=0;o<e;o++){let e=await loadWASMModule();if(!e)return void console.error("Error loading WASM module");var l=e._malloc(f[o].byteLength);e.HEAPU8.set(f[o],l),e._modelInit(l,f[o].byteLength),e._free(l);let t;var l="PROCESS_AUDIO_BATCH"===u.data.msg,m=s?2*o:o;t=processAudio(c,i,e,a[o],l,n,m),s&&(invertedLeftChannel=c.map(e=>-e),invertedRightChannel=i.map(e=>-e),invertedTargetWaveforms=processAudio(invertedLeftChannel,invertedRightChannel,e,a[o],l,n,m+1),invertInvertTargetWaveforms=invertedTargetWaveforms.map(e=>e.map(e=>-e)),t=t.map((e,o)=>e.map((e,t)=>(e+invertInvertTargetWaveforms[o][t])/2))),p.push(t),e=null}}else if("demucs-pro-cust"===modelName){let e=await loadWASMModule();if(!e)return void console.error("Error loading WASM module");var h=e._malloc(f[0].byteLength);e.HEAPU8.set(f[0],h),e._modelInit(h,f[0].byteLength),e._free(h);let o;h="PROCESS_AUDIO_BATCH"===u.data.msg;o=processAudio(c,i,e,4,h,n,0),invertedLeftChannel1=c.map(e=>-e),invertedRightChannel1=i.map(e=>-e);let s=processAudio(invertedLeftChannel1,invertedRightChannel1,e,4,h,n,1).map(e=>e.map(e=>-e));o=o.map((e,o)=>e.map((e,t)=>(e+s[o][t])/2));var g=c.map((e,t)=>e-o[6][t]),S=i.map((e,t)=>e-o[7][t]);if(!(e=await loadWASMModule()))return void console.error("Error loading WASM module");var A=e._malloc(f[1].byteLength);e.HEAPU8.set(f[1],A),e._modelInit(A,f[1].byteLength),e._free(A);let t,a=(t=processAudio(g,S,e,6,h,n,2),processAudio(g.map(e=>-e),S.map(e=>-e),e,6,h,n,3).map(e=>e.map(e=>-e)));A=[(t=t.map((e,o)=>e.map((e,t)=>(e+a[o][t])/2)))[0],t[1],t[2],t[3],t[4],t[5],o[6],o[7],t[8],t[9],t[10],t[11]];p.push(A)}else if("demucs-pro-cust-spec"===modelName){let e=await loadWASMModule();if(!e)return void console.error("Error loading WASM module");g=e._malloc(f[0].byteLength);e.HEAPU8.set(f[0],g),e._modelInit(g,f[0].byteLength),e._free(g);let o;S="PROCESS_AUDIO_BATCH"===u.data.msg;o=processAudio(c,i,e,2,S,n,0),invertedLeftChannel1=c.map(e=>-e),invertedRightChannel1=i.map(e=>-e);let s=processAudio(invertedLeftChannel1,invertedRightChannel1,e,2,S,n,1).map(e=>e.map(e=>-e));o=o.map((e,o)=>e.map((e,t)=>(e+s[o][t])/2));h=c.map((e,t)=>e-o[0][t]),A=i.map((e,t)=>e-o[1][t]);if(!(e=await loadWASMModule()))return void console.error("Error loading WASM module");g=e._malloc(f[1].byteLength);e.HEAPU8.set(f[1],g),e._modelInit(g,f[1].byteLength),e._free(g);let a,l=(a=processAudio(h,A,e,4,S,n,2),processAudio(h.map(e=>-e),A.map(e=>-e),e,4,S,n,3).map(e=>e.map(e=>-e)));a=a.map((e,o)=>e.map((e,t)=>(e+l[o][t])/2));g=h.map((e,t)=>e-a[0][t]),h=A.map((e,t)=>e-a[1][t]);if(!(e=await loadWASMModule()))return void console.error("Error loading WASM module");A=e._malloc(f[2].byteLength);e.HEAPU8.set(f[2],A),e._modelInit(A,f[2].byteLength),e._free(A);let m,r=(m=processAudio(g,h,e,4,S,n,4),processAudio(g.map(e=>-e),h.map(e=>-e),e,4,S,n,5).map(e=>e.map(e=>-e)));m=m.map((e,o)=>e.map((e,t)=>(e+r[o][t])/2));A=g.map((e,t)=>e-m[2][t]),g=h.map((e,t)=>e-m[3][t]);if(!(e=await loadWASMModule()))return void console.error("Error loading WASM module");h=e._malloc(f[3].byteLength);e.HEAPU8.set(f[3],h),e._modelInit(h,f[3].byteLength),e._free(h);let t,d=(t=processAudio(A,g,e,6,S,n,6),processAudio(A.map(e=>-e),g.map(e=>-e),e,6,S,n,7).map(e=>e.map(e=>-e)));t=t.map((e,o)=>e.map((e,t)=>(e+d[o][t])/2));h=[a[0],a[1],m[2],m[3],t[4],t[5],o[0],o[1],t[8],t[9],t[10],t[11]];p.push(h)}let t;if("demucs-karaoke"===modelName)t=p[0];else if("demucs-free-4s"===modelName){t=[];for(let e=0;e<selectedStems.length;e++)"drums"===selectedStems[e]?t.push(p[0][0],p[0][1]):"bass"===selectedStems[e]?t.push(p[0][2],p[0][3]):"melody"===selectedStems[e]?t.push(p[0][4],p[0][5]):"vocals"===selectedStems[e]&&t.push(p[0][6],p[0][7])}else if("demucs-free-6s"===modelName||"demucs-pro-cust"===modelName||"demucs-pro-cust-spec"===modelName){t=[];for(let e=0;e<selectedStems.length;e++)"drums"===selectedStems[e]?t.push(p[0][0],p[0][1]):"bass"===selectedStems[e]?t.push(p[0][2],p[0][3]):"other_melody"===selectedStems[e]?t.push(p[0][4],p[0][5]):"vocals"===selectedStems[e]?t.push(p[0][6],p[0][7]):"guitar"===selectedStems[e]?t.push(p[0][8],p[0][9]):"piano"===selectedStems[e]&&t.push(p[0][10],p[0][11])}else if("demucs-pro-ft"===modelName){t=[];for(let e=0;e<selectedStems.length;e++)"drums"===selectedStems[e]?t.push(p[e][0],p[e][1]):"bass"===selectedStems[e]?t.push(p[e][2],p[e][3]):"melody"===selectedStems[e]?t.push(p[e][4],p[e][5]):"vocals"===selectedStems[e]&&t.push(p[e][6],p[e][7])}else if("demucs-pro-deluxe"===modelName){t=[];for(let e=0;e<selectedStems.length;e++)"drums"===selectedStems[e]?t.push(p[e][0],p[e][1]):"bass"===selectedStems[e]?t.push(p[e][2],p[e][3]):"melody"===selectedStems[e]?t.push(p[e][4],p[e][5]):"vocals"===selectedStems[e]&&t.push(p[e][0],p[e][1])}A=t.map(e=>e.buffer);console.log("Finished demix job at "+(new Date).toString()),postMessage({msg:"PROCESS_AUDIO"===u.data.msg?"PROCESSING_DONE":"PROCESSING_DONE_BATCH",waveforms:t,originalLength:u.data.originalLength,filename:"PROCESS_AUDIO"===u.data.msg?"":u.data.filename},A)}};let MAX_TARGETS=6;function allocateWasmArray(e,t){var o=t.length*t.BYTES_PER_ELEMENT,o=e._malloc(o);if(0===o)throw new Error("Memory allocation failed");return new Float32Array(e.HEAPF32.buffer,o,t.length).set(t),o}function freeWasmMemory(t,e){e.forEach(e=>{null!==e&&0!==e&&t._free(e)})}function processAudio(t,o,s,a,e,l,m){try{var r=[allocateWasmArray(s,t),allocateWasmArray(s,o)],d=[];for(let e=0;e<MAX_TARGETS;e++)if(e<a){var n=s._malloc(t.length*t.BYTES_PER_ELEMENT),u=s._malloc(o.length*o.BYTES_PER_ELEMENT);if(0===n||0===u)throw new Error("Memory allocation failed for target "+e);d.push(n,u)}else d.push(0,0);var c=[r[0],r[1],t.length],i=(c.push(...d),c.push(e,l,m),s._modelDemixSegment(...c),[]);for(let e=0;e<a;e++){var p,f,h=d[2*e],g=d[2*e+1];0!==h&&0!==g&&(p=new Float32Array(s.HEAPF32.buffer,h,t.length),f=new Float32Array(s.HEAPF32.buffer,g,o.length),i.push(new Float32Array(p)),i.push(new Float32Array(f)))}return freeWasmMemory(s,[...r,...d]),console.log("Processed waveforms for model index "+m),i}catch(e){console.error("Error in processAudio:",e),console.error("Error processing audio"),postMessage({msg:"WASM_ERROR"}),close()}}